# Generated by Django 4.0.4 on 2022-04-28 05:18

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('userId', models.IntegerField()),
                ('content', models.CharField(max_length=255)),
                ('post', models.CharField(max_length=255)),
                ('like', models.IntegerField()),
                ('dislike', models.IntegerField()),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name=users.models.Post)),
                ('email', models.CharField(max_length=255)),
                ('contact', models.IntegerField()),
                ('location', models.IntegerField(blank=True)),
                ('address', models.CharField(max_length=255)),
                ('company_bio', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Jobseeker',
            fields=[
                ('jobid', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('location', models.IntegerField(blank=True)),
                ('professsion', models.CharField(max_length=255)),
                ('jobtype', models.CharField(max_length=255)),
                ('experience', models.CharField(max_length=255)),
                ('Education_level', models.CharField(max_length=255)),
                ('job_category', models.CharField(max_length=255)),
                ('contact', models.IntegerField()),
                ('salary_Expectation', models.IntegerField()),
                ('status', models.IntegerField()),
                ('bio', models.CharField(max_length=255)),
                ('work', models.CharField(max_length=255)),
                ('Education', models.CharField(max_length=255)),
                ('skills', models.CharField(max_length=255)),
                ('reference', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('is_employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='users.employer')),
                ('is_jobseeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user', to='users.jobseeker')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
